name: Broserstack automation test
run-name: Executed by [${{ github.actor }}] Device [${{ github.event.inputs.platform }}] Environment [${{ github.event.inputs.environment }}]

on:
  workflow_dispatch:
    inputs:
      platform:
        description: 'Choose the device to execute'
        required: true
        type: choice
        options:
          - Android
          - iOS
      Environment:
        description: 'Choose the environment to execute'
        required: true
        type: choice
        options:
          - DEV
          - QA
          - PROD
  
  workflow_call:
    inputs:
      environment:
        description: 'Choose the environment to execute'
        required: true
        default: 'PROD'
        type: string
      platform:
        description: 'Choose the device to execute'
        required: true
        default: 'Android'
        type: string

jobs:
  Browser-Stack-Execution:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    steps:
      - run: echo "Execution on ${{ github.event.inputs.environment }} environment"
      - name: Checkout repository code
        uses: actions/checkout@v4

      - run: echo "Current branch is ${{ github.ref }}"
      - run: echo "Installing dependencies"
      - name: Install dependencies
        run: npm install

      - run: echo "Choosing the right npm command to execute"
      - name: Get the npm command by operating system and environment
        run: |
          if [ "${{ inputs.platform }}" == "Android" ] && [ "${{ inputs.environment }}" == "DEV" ]; then
              echo "NPM_COMMAND=test:dev:android:all >> $GITHUB_ENV
          elif [ "${{ inputs.platform }}" == "Android" ] && [ "${{ inputs.environment }}" == "QA" ]; then
              echo "NPM_COMMAND=test:qa:android:all" >> $GITHUB_ENV
          elif [ "${{ inputs.platform }}" == "Android" ] && [ "${{ inputs.environment }}" == "PROD" ]; then
              echo "NPM_COMMAND=test:prod:android:all" >> $GITHUB_ENV
          elif [ "${{ inputs.platform }}" == "iOS" ] && [ "${{ inputs.environment }}" == "DEV" ]; then
              echo "NPM_COMMAND=test:dev:ios:all"" >> $GITHUB_ENV
          elif [ "${{ inputs.platform }}" == "iOS" ] && [ "${{ inputs.environment }}" == "QA" ]; then
              echo "NPM_COMMAND=test:qa:ios:all"" >> $GITHUB_ENV
          elif [ "${{ inputs.platform }}" == "iOS" ] && [ "${{ inputs.environment }}" == "PROD" ]; then
              echo "NPM_COMMAND=test:prod:ios:all"" >> $GITHUB_ENV
          fi
          echo "NPM_COMMAND=${{ env.NPM_COMMAND }}"

      - name: Set build name for Browser Stack
        id: set_build_name
        run: |
          if [ "${{ inputs.execution_type }}" == "DAILY" ]; then
            echo "::set-output name=build_name::${{ inputs.environment }} - Handoff- ${{ inputs.platform }} - DAILY - $(TZ=America/Sao_Paulo date +'%d/%m/%Y-%H:%M-%S')"
          else
            echo "::set-output name=build_name::${{ inputs.environment }} - Handoff - ${{ inputs.platform }} - MANNUALY - $(TZ=America/Sao_Paulo date +'%d/%m/%Y-%H:%M-%S')"
          fi

      - run: echo "Executing the npm command"
      - name: Execute the npm command
        if: env.NPM_COMMAND
        env:

          ENVIRONMENT: ${{ github.event.inputs.environment }}
          PLATFORM: ${{ github.event.inputs.os }}

        run: npm run ${{ env.NPM_COMMAND }}

          - name: Run tests
        if: env.TEST_COMMAND != 'none'
        env:
          APPCENTER_API_TOKEN: ${{ secrets.APPCENTER_API_TOKEN }}
          BROWSERSTACK_KEY: ${{ secrets.BROWSERSTACK_KEY }}
          BROWSERSTACK_USER: ${{ secrets.BROWSERSTACK_USER }}

      - run: echo "Uploading logs and tmp directories"
      - name: Upload logs directory
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: logs
          path: logs/

      - name: Upload tmp directory
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: tmp
          path: tmp/

      - run: echo "This job's status is ${{ job.status }}."

      - name: Checkout Branch
        uses: actions/checkout@v3
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Update Reports
        uses: PavanMudigonda/allure-html-reporter-github-pages@v1.2
        if: always()
        id: allure-report
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          allure_results: allure-results
          gh_pages: gh-pages
          keep_reports: 50
  
      - name: Publish Github Pages
        if: ${{ always() }}
        uses: peaceiris/actions-gh-pages@v4.0.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-history
          keep_files: true
